//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhoneShop.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/collect_Con", ReplyAction="http://tempuri.org/IService/collect_ConResponse")]
        string collect_Con(string szFileExtension, string szPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/collect_Con", ReplyAction="http://tempuri.org/IService/collect_ConResponse")]
        System.Threading.Tasks.Task<string> collect_ConAsync(string szFileExtension, string szPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTree", ReplyAction="http://tempuri.org/IService/CreateTreeResponse")]
        System.Data.DataSet CreateTree();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateTree", ReplyAction="http://tempuri.org/IService/CreateTreeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateTreeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getTableTree", ReplyAction="http://tempuri.org/IService/getTableTreeResponse")]
        System.Data.DataTable getTableTree();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getTableTree", ReplyAction="http://tempuri.org/IService/getTableTreeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> getTableTreeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getConsultingResults", ReplyAction="http://tempuri.org/IService/getConsultingResultsResponse")]
        string getConsultingResults(string infor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getConsultingResults", ReplyAction="http://tempuri.org/IService/getConsultingResultsResponse")]
        System.Threading.Tasks.Task<string> getConsultingResultsAsync(string infor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Dequy", ReplyAction="http://tempuri.org/IService/DequyResponse")]
        void Dequy(string Parent_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Dequy", ReplyAction="http://tempuri.org/IService/DequyResponse")]
        System.Threading.Tasks.Task DequyAsync(string Parent_ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : PhoneShop.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<PhoneShop.ServiceReference1.IService>, PhoneShop.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string collect_Con(string szFileExtension, string szPath) {
            return base.Channel.collect_Con(szFileExtension, szPath);
        }
        
        public System.Threading.Tasks.Task<string> collect_ConAsync(string szFileExtension, string szPath) {
            return base.Channel.collect_ConAsync(szFileExtension, szPath);
        }
        
        public System.Data.DataSet CreateTree() {
            return base.Channel.CreateTree();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateTreeAsync() {
            return base.Channel.CreateTreeAsync();
        }
        
        public System.Data.DataTable getTableTree() {
            return base.Channel.getTableTree();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getTableTreeAsync() {
            return base.Channel.getTableTreeAsync();
        }
        
        public string getConsultingResults(string infor) {
            return base.Channel.getConsultingResults(infor);
        }
        
        public System.Threading.Tasks.Task<string> getConsultingResultsAsync(string infor) {
            return base.Channel.getConsultingResultsAsync(infor);
        }
        
        public void Dequy(string Parent_ID) {
            base.Channel.Dequy(Parent_ID);
        }
        
        public System.Threading.Tasks.Task DequyAsync(string Parent_ID) {
            return base.Channel.DequyAsync(Parent_ID);
        }
    }
}
